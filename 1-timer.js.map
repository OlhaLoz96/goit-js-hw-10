{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('.timer-btn');\nconst input = document.querySelector('#datetime-picker');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > new Date()) {\n      userSelectedDate = selectedDates[0];\n      button.disabled = false;\n    } else {\n      // alert('Please choose a date in the future');\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      button.disabled = true;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbutton.addEventListener('click', handleClick);\n\nfunction handleClick(event) {\n  button.disabled = true;\n  input.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const deltaTime = userSelectedDate - currentTime;\n    if (deltaTime > 0) {\n      const time = convertMs(deltaTime);\n      updateTimer(time);\n    } else {\n      input.disabled = false;\n      clearInterval(intervalId);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer(obj) {\n  const keys = Object.keys(obj);\n  keys.forEach(\n    key => (document.querySelector(`[data-${key}]`).textContent = obj[key])\n  );\n}\n"],"names":["button","input","userSelectedDate","options","selectedDates","iziToast","flatpickr","handleClick","event","intervalId","deltaTime","time","convertMs","updateTimer","ms","days","hours","addLeadingZero","minutes","seconds","value","obj","key"],"mappings":"0IAMA,MAAMA,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAQ,SAAS,cAAc,kBAAkB,EAEvD,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBF,EAAmBE,EAAc,CAAC,EAClCJ,EAAO,SAAW,KAGlBK,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDL,EAAO,SAAW,GAErB,CACH,EAEAM,EAAU,mBAAoBH,CAAO,EAErCH,EAAO,iBAAiB,QAASO,CAAW,EAE5C,SAASA,EAAYC,EAAO,CAC1BR,EAAO,SAAW,GAClBC,EAAM,SAAW,GAEjB,MAAMQ,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAYR,EADE,IAAI,KAExB,GAAIQ,EAAY,EAAG,CACjB,MAAMC,EAAOC,EAAUF,CAAS,EAChCG,EAAYF,CAAI,CACtB,MACMV,EAAM,SAAW,GACjB,cAAcQ,CAAU,CAE3B,EAAE,GAAI,CACT,CAEA,SAASG,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQC,EAAe,KAAK,MAAOH,EAAK,MAAO,IAAI,CAAC,EAEpDI,EAAUD,EAAe,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEjEK,EAAUF,EACd,KAAK,MAASH,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAE,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASF,EAAeG,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASP,EAAYQ,EAAK,CACX,OAAO,KAAKA,CAAG,EACvB,QACHC,GAAQ,SAAS,cAAc,SAASA,CAAG,GAAG,EAAE,YAAcD,EAAIC,CAAG,CACzE,CACA"}